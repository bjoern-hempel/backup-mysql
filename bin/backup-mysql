#!/bin/bash

# some configs
       FRIENDS_OF_BASH_ROOT="/opt/friends-of-bash/friends-of-bash"
FRIENDS_OF_BASH_SOURCE_FILE="$FRIENDS_OF_BASH_ROOT/lib/all"
         BACKUP_CONFIG_PATH="/etc/backup-mysql/config"

# some calculable configs before
if [ -h "${BASH_SOURCE[0]}" ]; then
    realScriptname=$(readlink "${BASH_SOURCE[0]}")
    pathRoot=$(dirname "$realScriptname")
    scriptname="${BASH_SOURCE[0]}"
else
    scriptname="$0"
    pathRoot="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
fi

# include friends of bash
source "$FRIENDS_OF_BASH_SOURCE_FILE"

# include arguments
source "$pathRoot/../lib/arguments"

# check config files
configFolder=$(dirname "$BACKUP_CONFIG_PATH")
if [ ! -d "$configFolder" ]; then
    echo
    echo "Config folder \"$configFolder\" was not found. Please do:"
    echo
    echo "··········"
    echo "user\$ sudo mkdir \"$configFolder\""
    echo "··········"
    echo
    exit
fi
if [ ! -f "$BACKUP_CONFIG_PATH" ]; then
    echo
    echo "Config file \"\" was not found. Please do:"
    echo
    echo "··········"
    echo "user\$ sudo touch /etc/backup-mysql/config"
    echo "user\$ sudo chmod -R 500 \"$BACKUP_CONFIG_PATH\""
    echo "··········"
    echo
    echo "Add with an editor of your choice the following content to \"$BACKUP_CONFIG_PATH\":"
    echo
    echo "~~~~~~~~~~"
    echo "MYSQL_HOST=\"localhost\""
    echo "MYSQL_USER=\"root\""
    echo "MYSQL_PASSWORD=\"**********\""
    echo "MYSQL_BACKUP_PATH=\"/var/backups/mysql\""
    echo "LOCK_FILE=\"build.lock\""
    echo "~~~~~~~~~~"
    echo
    exit
fi

# include some libraries
source "$BACKUP_CONFIG_PATH"

# some constants
ROOT_UID="0"

# check if we are root
if [ "$UID" -ne "$ROOT_UID" ]; then
    echo "You must be root to backup your mysql databases."
    exit 1
fi

# Time based variables
TIMESTAMP=$(date +%Y/%m/%d/%H-%M-%S)

# header
log "header" "Start backup mysql tables.."

# check backup path
log "info" "Check backup path"
if [ ! -d "$MYSQL_BACKUP_PATH" ]; then
    log "info" "Create backup path."
    mkdir -p "$MYSQL_BACKUP_PATH"
    chmod -R 775 /var/backups/mysql
    chown -R root:root /var/backups/mysql
else
    log "info" "Backup path exists."
fi

# create subfolder
log "info" "Create folder $MYSQL_BACKUP_PATH/$TIMESTAMP"
mkdir -p $MYSQL_BACKUP_PATH/$TIMESTAMP

log "info" "Switch into folder \"$MYSQL_BACKUP_PATH\""
cd "$MYSQL_BACKUP_PATH"

databases=$(mysql --host=$MYSQL_HOST --user=$MYSQL_USER --password=$MYSQL_PASSWORD -e "SHOW DATABASES;" | tr -d "| " | grep -v Database)

log "info" "Lock backup folder. Write $MYSQL_BACKUP_PATH/$TIMESTAMP/$LOCK_FILE."
touch $MYSQL_BACKUP_PATH/$TIMESTAMP/$LOCK_FILE

for db in $databases; do
  if [[ "$db" != "information_schema" ]] && [[ "$db" != "performance_schema" ]] && [[ "$db" != "mysql" ]] && [[ "$db" != _* ]]; then
    log "info" "Dump database $db TO $MYSQL_BACKUP_PATH/$TIMESTAMP/$db.sql"
    mysqldump --force --opt --host=$MYSQL_HOST --user=$MYSQL_USER --password=$MYSQL_PASSWORD --databases $db > $TIMESTAMP/$db.sql

    log "info" "Zip sql file to $MYSQL_BACKUP_PATH/$TIMESTAMP/$db.sql.gz"
    gzip $TIMESTAMP/$db.sql
  fi
done

log "info" "Delete lock file"
rm $MYSQL_BACKUP_PATH/$TIMESTAMP/$LOCK_FILE

log "info" "Finish backup mysql script"

